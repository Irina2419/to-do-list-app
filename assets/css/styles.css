@import url('https://fonts.googleapis.com/css2?family=Homemade+Apple&display=swap');

* {
  box-sizing: border-box;
}

html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: 'Roboto', sans-serif;
  background-color: #F5F5F7;
  color: #000;
  transition: background 0.3s, color 0.3s;
  display: flex;
  flex-direction: column;
  overflow-x: hidden; /* Prevents horizontal scrolling */
}

.page-wrapper {
  flex: 1;
  padding: 20px;
}

.header-row {
  position: relative;
  text-align: center;
  margin-bottom: 30px;
  padding-top: 20px;
}

.header-row h1 {
  margin: 0;
  font-size: 2.5rem;
}

.theme-toggle {
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  gap: 5px;
  background: transparent;
  border: none;
  padding: 0;
  box-shadow: none;
}

.theme-toggle button {
  background: transparent;
  border: none;
  width: 40px;
  height: 40px;
  font-size: 24px;
  cursor: pointer;
  transition: transform 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: none;
  border-radius: 50%;
  padding: 0;
}

.theme-toggle button.moon {
  font-size: 25px; /* Slightly larger than the sun */
}


.theme-toggle button.active {
  transform: scale(1.4);
}

.theme-toggle button:hover {
  transform: scale(1.2);
}


.tooltip {
  visibility: hidden;
  color: #333;
  background-color: transparent;
  font-size: 12px;
  text-align: center;
  padding: 4px;
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
  opacity: 0;
  transition: opacity 0.3s;
}

#themeToggle:hover .tooltip {
  visibility: visible;
  opacity: 1;
}

.shadow-dance-text {
  font-size: 3rem;
  color: #4A90E2; /* Your existing blue */
  text-align: center;
  margin: 0;
  text-shadow: 3px 3px 0 #F1C40F, 6px 6px 0 #FF69B4;
  animation: shadow-dance 2s infinite ease-in-out;
}

@keyframes shadow-dance {
  0%, 100% {
    text-shadow: 3px 3px 0 #F1C40F, 6px 6px 0 #FF69B4;
  }
  50% {
    text-shadow: -3px -3px 0 #FF69B4, -6px -6px 0 #F1C40F;
  }
}

/* Spin and fade out animation */
@keyframes spinOut {
  0% {
    opacity: 1;
    transform: rotate(0deg) scale(1);
  }
  100% {
    opacity: 0;
    transform: rotate(720deg) scale(0);
  }
}

li.removing {
  animation: spinOut 0.7s ease forwards;
}


/* Firework burst animation */
@keyframes fireworks {
  0% {
    transform: translateX(-50%) scale(0.2);
    opacity: 0;
  }
  50% {
    transform: translateX(-50%) scale(1.2);
    opacity: 1;
  }
  100% {
    transform: translateX(-50%) scale(1);
  }
}

/* Fade out */
@keyframes fadeOut {
  to {
    opacity: 0;
    visibility: hidden;
  }
}

@keyframes burst {
  0% {
    transform: scale(1) translate(0, 0);
    opacity: 1;
  }
  100% {
    transform: scale(0.5) translate(var(--x), var(--y));
    opacity: 0;
  }
}

.firework-container {
  position: fixed;
  top: 30%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1000;
  pointer-events: none;
}

/* Firework message styling */
.firework-message {
  background: #f1c40f;
  color: #2c3e50;
  font-size: 1.5rem;
  padding: 15px 25px;
  border-radius: 12px;
  box-shadow: 0 0 30px #f39c12;
  animation: fadeOut 2s 1s forwards;
  position: relative;
  z-index: 1001;
}

.firework-dot {
  position: absolute;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: #ff005e;
  animation: burst 2s ease-out forwards;
}

body.dark .tooltip {
  color: #fff;
}

h1 {
  color: #4A90E2;
  margin: 0 0 20px 0;
}

/* Input Section */
#myDIV {
  display: flex;
  flex-direction: column;
  gap: 10px;
  width: 100%;
  max-width: 66%;
  margin: 0 auto 20px auto;
  box-sizing: border-box;
}

#myInput {
  width: 100%;
  padding: 12px 16px;
  font-size: 16px;
  border: 1px solid #ddd; /* Light gray border */
  border-radius: 999px; /* Fully rounded sides */
  outline: none; /* Prevents default black border on focus */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05); /* Light bottom shadow */
  transition: box-shadow 0.2s ease;
}

.addBtn {
  width: 100%;
  padding: 12px;
  background: #4A90E2;
  color: white;
  border: none;
  border-radius: 50%;
  font-size: 16px;
  cursor: pointer;
}

.addBtn i {
  color: white;
  font-size: 22px;
}

.addBtn:hover {
  background-color: #357ABD;
}

/* Task List */
ul {
  list-style-type: none;
  margin: 0 auto;
  padding: 0;
  width: 100%;
  max-width: 66%;
  display: flex;         /* Make it a flex container */
  flex-wrap: wrap;       /* Allow items to wrap to the next line */
  justify-content: flex-start; /* Align items to the start (left) */
  gap: 10px;             /* Add a gap BETWEEN the li elements */
}

ul li {
  padding: 8px 12px;
  background: #F5F5F7;
  line-height: 1.6;
  font-size: 18px;
  display: flex;
  align-items: center;
  gap: 10px;             /* Gap BETWEEN task text and close button */
  margin-bottom: 0;      /* REMOVE margin-bottom if gap on ul is used, or adjust as needed */
  border-radius: 999px;
  font-family: 'Homemade Apple', cursive, sans-serif;
  /* REMOVE this line: width: 48%; */ /* <-- REMOVE THIS LINE */
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
  transition: background 0.2s, box-shadow 0.2s;
}

ul li:hover {
  background: #eee;
  box-shadow: 0 2px 5px rgba(0,0,0,0.15);
}

ul li.checked .task-text {
  text-decoration: line-through;
  color: #27AE60;
}

ul li .task-text {
  /* No flex-grow: 1 needed if li is not fixed width */
  /* If you want the text to expand within the padding but not force the li to expand more than needed,
     you can use min-width and max-width if desired, but letting it shrink/grow naturally is simpler. */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Ensure the .close button has the correct styles and doesn't shrink */
.close {
  color: #E74C3C;
  font-weight: bold;
  cursor: pointer;
  font-size: 20px;
  flex-shrink: 0;
  padding: 0 5px;
}

/* The media query for smaller screens can be simplified or removed,
   as the default behavior will now be responsive. */
@media (max-width: 768px) {
  ul li {
    /* If you still want a minimum width for very short tasks on small screens, you can add it here.
       Otherwise, this block can be removed as the default flex behavior will handle it. */
    /* min-width: 150px; */
  }
}

.close:hover {
  color: #c0392b;
}

/* Dark Mode */
body.dark {
  background-color: #2C3E50;
  color: white;
}

body.dark ul li {
  background: #3b4b5c;
}

body.dark ul li:hover {
  background: #465a6b;
}

/* Footer */
footer {
  background-color: #4A90E2; /* Blue background */
  color: white; /* White text */
  text-align: center; /* Centers the text */
  padding: 10px 0; /* Adds padding above and below the text */
  font-size: 14px; /* Small font size */
  width: 100%; /* Ensures the footer spans the full width of the viewport */
  box-sizing: border-box; /* Includes padding in the width calculation */
  overflow-x: hidden; /* Prevents horizontal scrolling caused by the footer */
}

/* Responsive */
@media (min-width: 600px) {
  #myDIV {
    flex-direction: row;
  }

  #myInput {
    flex: 1;
  }

  .addBtn {
    width: auto;
    white-space: nowrap;
  }
}