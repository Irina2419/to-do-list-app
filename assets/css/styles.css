@import url('https://fonts.googleapis.com/css2?family=Homemade+Apple&display=swap');

* {
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: 'Roboto', sans-serif;
  background-color: #F5F5F7;
  color: #000;
  transition: background 0.3s, color 0.3s;
  display: flex;
  flex-direction: column;
  overflow-x: hidden;
  /* Keep to prevent horizontal scrolling */
  overflow-y: auto;
  /* CRITICAL: Allow vertical scrolling on the main window */
  -ms-overflow-style: none;
  /* IE and Edge */
  scrollbar-width: none;
  /* Firefox */
}

html::-webkit-scrollbar,
body::-webkit-scrollbar {
  display: none;
  /* Hide scrollbar for WebKit */
  width: 0;
  /* Also set width to 0 for extra safety */
  background: transparent;
  /* Make background transparent */
}

.page-wrapper {
  flex-grow: 1;
  flex-shrink: 0;
  /* Keep flex-shrink: 0 to prevent it from collapsing */
  flex-basis: auto;
  padding: 20px;
  display: flex;
  flex-direction: column;
}

.header-row {
  position: relative;
  text-align: center;
  margin-bottom: 30px;
  padding-top: 20px;
  flex-shrink: 0;
  /* Prevent header from shrinking */
}

.header-row h1 {
  margin: 0;
  font-size: 2.5rem;
}

.theme-toggle {
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  gap: 5px;
  background: transparent;
  border: none;
  padding: 0;
  box-shadow: none;
}

.theme-toggle button {
  background: transparent;
  border: none;
  width: 40px;
  height: 40px;
  font-size: 24px;
  cursor: pointer;
  transition: transform 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: none;
  border-radius: 50%;
  padding: 0;
}

.theme-toggle button.moon {
  font-size: 25px;
  /* Slightly larger than the sun */
}


.theme-toggle button.active {
  transform: scale(1.4);
}

.theme-toggle button:hover {
  transform: scale(1.2);
}

.tooltip {
  visibility: hidden;
  color: #333;
  background-color: transparent;
  font-size: 12px;
  text-align: center;
  padding: 4px;
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
  opacity: 0;
  transition: opacity 0.3s;
}

#themeToggle:hover .tooltip {
  visibility: visible;
  opacity: 1;
}

.shadow-dance-text {
  font-size: 3rem;
  color: #4A90E2;
  /* Your existing blue */
  text-align: center;
  margin: 0;
  text-shadow: 3px 3px 0 #F1C40F, 6px 6px 0 #FF69B4;
  /* Ensure this is the bright pink */
  animation: shadow-dance 2s infinite ease-in-out;
}

@keyframes shadow-dance {

  0%,
  100% {
    text-shadow: 3px 3px 0 #F1C40F, 6px 6px 0 #FF69B4;
  }

  50% {
    text-shadow: -3px -3px 0 #FF69B4, -6px -6px 0 #F1C40F;
  }
}

/* Spin and fade out animation */
@keyframes spinOut {
  0% {
    opacity: 1;
    transform: rotate(0deg) scale(1);
  }

  100% {
    opacity: 0;
    transform: rotate(720deg) scale(0);
  }
}

li.removing {
  animation: spinOut 0.7s ease forwards;
}


/* Input Section */
#myDIV {
  display: flex;
  flex-direction: column;
  /* Default for small screens, will change to row for larger */
  gap: 10px;
  width: 100%;
  max-width: 66%;
  margin: 0 auto 20px auto;
  box-sizing: border-box;
  align-items: center;
  /* Centers items vertically when flex-direction is row */
  flex-shrink: 0;
  /* Prevent input section from shrinking */
}

#myInput {
  width: 100%;
  padding: 12px 16px;
  font-size: 16px;
  border: 1px solid #ddd;
  /* Light gray border */
  border-radius: 999px;
  /* Fully rounded sides */
  outline: none;
  /* Prevents default black border on focus */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  /* Light bottom shadow */
  transition: box-shadow 0.2s ease;
}

/* --- CORRECTED AND RESPONSIVE .addBtn STYLES --- */
.addBtn {
  width: 3.5rem;
  /* Base size for desktop, scales with root font size (e.g., 56px if 1rem=16px) */
  aspect-ratio: 1 / 1;
  /* Ensures height equals width for a perfect circle */
  border-radius: 50%;
  /* Makes it a perfect circle */
  display: flex;
  justify-content: center;
  /* Center icon horizontally */
  align-items: center;
  /* Center icon vertically */
  flex-shrink: 0;
  /* Prevent it from shrinking in flex containers */

  background: #4A90E2;
  color: white;
  border: none;
  cursor: pointer;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  transition: background-color 0.2s, transform 0.2s;
}

.addBtn i {
  font-size: 1.5rem;
  /* Icon size scales with button */
  line-height: 1;
  /* Removes extra space above/below icon */
  color: white;
}

.addBtn:hover {
  background-color: #357ABD;
  transform: translateY(-2px);
}

/* Style for the drop target when an item is being dragged over it */
.addBtn.drag-over {
  background-color: #28a745;
  box-shadow: 0 0 15px rgba(40, 167, 69, 0.7);
  transform: scale(1.1);
}

/* --- END CORRECTED AND RESPONSIVE .addBtn STYLES --- */


/* Task List */
ul {
  list-style-type: none;
  margin: 0 auto;
  /* Horizontal centering */
  padding: 0;
  width: 100%;
  max-width: 66%;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  gap: 10px;
  /* CRITICAL: Allow UL to grow and shrink, but not push content beyond its boundaries */
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: auto;
  /* Let content define its base size */
  /* If UL itself gets very long, it should ideally have its own scrollbar */
  /* However, for now, let the page-wrapper's overflow-y handle it. */
}

ul li {
  padding: 8px 12px;
  background: #F5F5F7;
  line-height: 1.6;
  font-size: 18px;
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 0;
  border-radius: 999px;
  font-family: 'Homemade Apple', cursive, sans-serif;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  transition: background 0.2s, box-shadow 0.2s;
}

ul li:hover {
  background: #eee;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
}

ul li.checked .task-text {
  text-decoration: line-through;
  color: #27AE60;
}

ul li .task-text {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.close {
  color: #E74C3C;
  font-weight: bold;
  cursor: pointer;
  font-size: 20px;
  flex-shrink: 0;
  padding: 0 5px;
}

.close:hover {
  color: #c0392b;
}

/* Dark Mode */
body.dark {
  background-color: #2C3E50;
  color: white;
}

body.dark ul li {
  background: #3b4b5c;
}

body.dark ul li:hover {
  background: #465a6b;
}

/* Footer */
footer {
  background-color: #4A90E2;
  color: white;
  text-align: center;
  padding: 30px 0;
  font-size: 14px;
  width: 100%;
  box-sizing: border-box;
  overflow-x: hidden;
  flex-shrink: 0;
  /* CRITICAL: Prevent footer from shrinking out of view */
  display: flex;
  /* Make footer a flex container */
  justify-content: center;
  /* Center horizontally (already done by text-align, but good for flex items) */
  align-items: center;
  /* CRITICAL: Center content vertically */
}

footer p {
  margin: 0;
  /* CRITICAL: Remove default top and bottom margins from the paragraph */
  padding: 0;
  /* Ensure no extra padding from the paragraph itself */
  line-height: 1;
  /* Ensure line height doesn't add extra space */
}

/* Responsive Overrides (Adjust button size for different screens) */
@media (max-width: 768px) {

  /* Tablets and smaller */
  .addBtn {
    width: 3rem;
    /* Slightly smaller (e.g., 48px) */
  }

  .addBtn i {
    font-size: 1.3rem;
    /* Adjust icon size */
  }

  #myDIV {
    flex-direction: row;
    /* Keep input and button side-by-side unless very small */
    justify-content: center;
    /* Center them horizontally */
    align-items: center;
  }
}

@media (max-width: 480px) {

  /* Mobile phones */
  #myDIV {
    flex-direction: column;
    /* Stack input and button */
    align-items: stretch;
    /* Stretch input to full width */
  }

  #myInput {
    margin-bottom: 10px;
    /* Add space below input when stacked */
  }

  .addBtn {
    width: 3.5rem;
    /* Revert to a slightly larger size for easier tapping on mobile */
    margin: 0 auto;
    /* Center button when stacked */
  }

  .addBtn i {
    font-size: 1.5rem;
  }

  .header-row h1 {
    padding-top: 50px;
    /* More space from the top for the H1 */
  }
  .theme-toggle {
  top: 15px; /* Position from the top of the header-row, above the H1 */
  right: 15px; /* Keep it on the right */
  transform: none; /* CRITICAL: Remove vertical centering transform */
  }
}

@media (min-width: 600px) {

  /* Standard desktop layout */
  #myDIV {
    flex-direction: row;
    /* Input and button side-by-side */
    align-items: center;
    gap: 10px;
  }

  #myInput {
    flex: 1;
    /* Input takes remaining space */
  }
}


/* DRAG & DROP STYLES */
.draggable-cards-section {
  width: 100%;
  max-width: 66%;
  margin: 20px auto 0 auto;
  padding: 15px;
  background-color: #F5F5F7;
  /* Light gray background */
  border: none;
  /* Remove any default border */
  outline: none;
  /* Remove any default outline */
  background: #F5F5F7;
  /* Use shorthand to potentially override inherited background images/gradients */
  border-radius: 12px;
  box-shadow: none;
  /* No shadow for a cleaner look */
  margin-top: auto;
  /* Pushes this section to the bottom of the page-wrapper flex container */
  margin-bottom: 10px;
  /* Adjust if needed */
  flex-shrink: 0;
  /* CRITICAL: Prevent this section from shrinking out of view */
  z-index: 10;
  /* Ensure draggable section is above most normal content */
  pointer-events: auto;
  /* CRITICAL: Ensure elements inside are always interactive */
}

.draggable-cards-section h2 {
  font-family: 'Homemade Apple', cursive, sans-serif;
  color: #4A90E2;
}

.draggable-card {
  cursor: grab;
  transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease;
}

/* Bootstrap card overrides */
.draggable-card.card {
  background-color: #FF69B4;
  /* Bright pink background */
  border: 1px solid #ddd;
  border-radius: 8px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
  height: 100%;
  /* Ensure cards in a row have same height */
}

.draggable-card .card-body {
  padding: 10px;
  display: flex;
  align-items: center;
  /* This centers content vertically in a flex container */
  justify-content: center;
  /* This also centers content horizontally if it doesn't take full width */
}

.draggable-card .card-title {
  font-family: 'Homemade Apple', cursive, sans-serif;
  font-size: 1rem;
  color: white;
  /* Changed to white for better contrast with pink background */
  margin-top: 0;
  margin-bottom: 0;
}

.draggable-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
  background-color: #FF8DC4;
  /* Lighter pink on hover */
}

.draggable-card:active {
  cursor: grabbing;
  transform: scale(0.98);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15);
}

/* Style for the drop target when an item is being dragged over it */
.addBtn.drag-over {
  background-color: #28a745;
  box-shadow: 0 0 15px rgba(40, 167, 69, 0.7);
  transform: scale(1.1);
}

/* Dark mode for draggable cards */
body.dark .draggable-cards-section {
  background-color: #3b4b5c;
  color: white;
}

body.dark .draggable-cards-section h2 {
  color: white;
}

body.dark .draggable-card.card {
  background-color: #FF69B4;
  /* Bright pink background */
  border-color: #556b80;
}

body.dark .draggable-card .card-title {
  color: white;
}

body.dark .draggable-card:hover {
  background-color: #556b80;
}


/* NEW FIREWORK STYLES */
.firework-overlay-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 1000;
  pointer-events: none;
  overflow: hidden;
  background: transparent;
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease-in-out, visibility 0s linear 0.3s;
}

.firework-overlay-container.active {
  opacity: 1;
  visibility: visible;
  transition: opacity 0.3s ease-in-out;
}

.firework-message {
  background: #f1c40f;
  color: #2c3e50;
  font-size: 1.5rem;
  padding: 15px 25px;
  border-radius: 12px;
  box-shadow: 0 0 30px #f39c12;
  position: relative;
  z-index: 1001;
  text-align: center;
  white-space: nowrap;
  pointer-events: auto;

  animation: fadeOutMessage 2s 1s forwards;
}

@keyframes fadeOutMessage {
  to {
    opacity: 0;
    visibility: hidden;
  }
}

@keyframes firework {
  0% {
    transform: translate(var(--x), var(--initialY));
    width: var(--initialSize);
    opacity: 1;
  }

  50% {
    width: 0.5vmin;
    opacity: 1;
  }

  100% {
    transform: translate(var(--x), var(--finalY));
    width: var(--finalSize);
    opacity: 0;
  }
}

.firework,
.firework::before,
.firework::after {
  --initialSize: 0.5vmin;
  --finalSize: 45vmin;
  --particleSize: 0.2vmin;
  --y: -30vmin;
  --x: -50%;
  --initialY: 60vmin;
  content: "";
  animation: firework 2s infinite;
  position: absolute;
  transform: translate(-50%, var(--y));
  width: var(--initialSize);
  aspect-ratio: 1;
  background-size: var(--initialSize) var(--initialSize);
  background-repeat: no-repeat;
}

.firework {
  background:
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 50% 0%,
    radial-gradient(circle, var(--color2) var(--particleSize), #0000 0) 100% 50%,
    radial-gradient(circle, var(--color3) var(--particleSize), #0000 0) 50% 100%,
    radial-gradient(circle, var(--color4) var(--particleSize), #0000 0) 0% 50%,
    radial-gradient(circle, var(--color5) var(--particleSize), #0000 0) 80% 90%,
    radial-gradient(circle, var(--color6) var(--particleSize), #0000 0) 95% 90%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 90% 70%,
    radial-gradient(circle, var(--color2) var(--particleSize), #0000 0) 100% 60%,
    radial-gradient(circle, var(--color3) var(--particleSize), #0000 0) 55% 80%,
    radial-gradient(circle, var(--color4) var(--particleSize), #0000 0) 70% 77%,
    radial-gradient(circle, var(--color5) var(--particleSize), #0000 0) 22% 90%,
    radial-gradient(circle, var(--color6) var(--particleSize), #0000 0) 45% 90%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 33% 70%,
    radial-gradient(circle, var(--color2) var(--particleSize), #0000 0) 10% 60%,
    radial-gradient(circle, var(--color3) var(--particleSize), #0000 0) 31% 80%,
    radial-gradient(circle, var(--color4) var(--particleSize), #0000 0) 28% 77%,
    radial-gradient(circle, var(--color5) var(--particleSize), #0000 0) 13% 72%,
    radial-gradient(circle, var(--color6) var(--particleSize), #0000 0) 80% 10%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 95% 14%,
    radial-gradient(circle, var(--color2) var(--particleSize), #0000 0) 90% 23%,
    radial-gradient(circle, var(--color3) var(--particleSize), #0000 0) 100% 43%,
    radial-gradient(circle, var(--color4) var(--particleSize), #0000 0) 85% 27%,
    radial-gradient(circle, var(--color5) var(--particleSize), #0000 0) 77% 37%,
    radial-gradient(circle, var(--color6) var(--particleSize), #0000 0) 60% 7%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 22% 14%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 45% 20%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 33% 34%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 10% 29%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 31% 37%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 28% 7%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 13% 42%;
}


/* Pseudo-elements for the specific example's multiple bursts */
.firework::before {
  --x: -50%;
  --y: -50%;
  --initialY: -50%;
  transform: translate(-50%, -50%) rotate(40deg) scale(1.3) rotateY(40deg);
}

.firework::after {
  --x: -50%;
  --y: -50%;
  --initialY: -50%;
  transform: translate(-50%, -50%) rotate(170deg) scale(1.15) rotateY(-30deg);
}